# This is a basic workflow to help you get started with Actions

name: v8-android-arm64-v8a

# Controls when the workflow will run
on:
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      - uses: actions/checkout@v4
        with:
          path: Scripts

      - uses: actions/setup-python@v5
        with:
          python-version: '3.12'

      # Runs a single command using the runners shell
      # See https://v8.dev/docs/cross-compile-arm
      - name: Fetch v8
        run: |
          sudo apt-get update
          sudo apt-get install -y ninja-build generate-ninja pkg-config zip unzip

          cd $GITHUB_WORKSPACE
          wget -O android-ndk.zip -q https://dl.google.com/android/repository/android-ndk-r23c-linux.zip
          unzip -q android-ndk.zip
          export ANDROID_NDK=$GITHUB_WORKSPACE/android-ndk-r23c
          echo "default_android_ndk_root = \"$GITHUB_WORKSPACE/android-ndk-r23c\"\n" >> $GITHUB_WORKSPACE/Scripts/v8.android_arm64.args.gn
          echo "default_android_ndk_version = \"r23c\"\n" >> $GITHUB_WORKSPACE/Scripts/v8.android_arm64.args.gn
          cat $GITHUB_WORKSPACE/Scripts/v8.android_arm64.args.gn

          git clone https://chromium.googlesource.com/chromium/tools/depot_tools.git
          export PATH=$GITHUB_WORKSPACE/depot_tools:$PATH
          cd depot_tools
          gclient
          mkdir $GITHUB_WORKSPACE/v8
          cd $GITHUB_WORKSPACE/v8
          fetch v8
          echo "target_os = ['android']" >> .gclient
          cat .gclient
          cd v8
          git checkout refs/tags/12.4.254.20
          gclient sync -D

      - name: Build v8 arm64-v8a
        run: |
          cd $GITHUB_WORKSPACE/v8/v8
          sh ./build/install-build-deps.sh --android
          python ./build/linux/sysroot_scripts/install-sysroot.py --arch=arm64
          python ./tools/dev/v8gen.py arm64.release
          cp $GITHUB_WORKSPACE/Scripts/v8.android_arm64.args.gn $GITHUB_WORKSPACE/v8/v8/out.gn/arm64.release/args.gn
          cat $GITHUB_WORKSPACE/v8/v8/out.gn/arm64.release/args.gn
          ninja -C ./out.gn/arm64.release v8_monolith

      - name: Upload
        uses: actions/upload-artifact@v4
        with: 
          path: v8/v8/out.gn/arm64.release/obj/libv8_monolith.a
          name: prebuilt_v8_android_arm64
        

